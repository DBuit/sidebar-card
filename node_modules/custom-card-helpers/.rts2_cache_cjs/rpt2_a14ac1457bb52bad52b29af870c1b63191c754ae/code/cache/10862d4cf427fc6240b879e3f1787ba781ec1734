{"code":"import { formatDateTime } from \"./datetime/format_date_time\";\r\nimport { formatDate } from \"./datetime/format_date\";\r\nimport { formatTime } from \"./datetime/format_time\";\r\nimport { computeStateDomain } from \"./compute-state-domain\";\r\nexport function computeStateDisplay(localize, stateObj, language) {\r\n    let display;\r\n    const domain = computeStateDomain(stateObj);\r\n    if (domain === \"binary_sensor\") {\r\n        // Try device class translation, then default binary sensor translation\r\n        if (stateObj.attributes.device_class) {\r\n            display = localize(`state.${domain}.${stateObj.attributes.device_class}.${stateObj.state}`);\r\n        }\r\n        if (!display) {\r\n            display = localize(`state.${domain}.default.${stateObj.state}`);\r\n        }\r\n    }\r\n    else if (stateObj.attributes.unit_of_measurement &&\r\n        ![\"unknown\", \"unavailable\"].includes(stateObj.state)) {\r\n        display = stateObj.state + \" \" + stateObj.attributes.unit_of_measurement;\r\n    }\r\n    else if (domain === \"input_datetime\") {\r\n        let date;\r\n        if (!stateObj.attributes.has_time) {\r\n            date = new Date(stateObj.attributes.year, stateObj.attributes.month - 1, stateObj.attributes.day);\r\n            display = formatDate(date, language);\r\n        }\r\n        else if (!stateObj.attributes.has_date) {\r\n            const now = new Date();\r\n            date = new Date(\r\n            // Due to bugs.chromium.org/p/chromium/issues/detail?id=797548\r\n            // don't use artificial 1970 year.\r\n            now.getFullYear(), now.getMonth(), now.getDay(), stateObj.attributes.hour, stateObj.attributes.minute);\r\n            display = formatTime(date, language);\r\n        }\r\n        else {\r\n            date = new Date(stateObj.attributes.year, stateObj.attributes.month - 1, stateObj.attributes.day, stateObj.attributes.hour, stateObj.attributes.minute);\r\n            display = formatDateTime(date, language);\r\n        }\r\n    }\r\n    else if (domain === \"zwave\") {\r\n        if ([\"initializing\", \"dead\"].includes(stateObj.state)) {\r\n            display = localize(`state.zwave.query_stage.${stateObj.state}`, \"query_stage\", stateObj.attributes.query_stage);\r\n        }\r\n        else {\r\n            display = localize(`state.zwave.default.${stateObj.state}`);\r\n        }\r\n    }\r\n    else {\r\n        display = localize(`state.${domain}.${stateObj.state}`);\r\n    }\r\n    // Fall back to default, component backend translation, or raw state if nothing else matches.\r\n    if (!display) {\r\n        display =\r\n            localize(`state.default.${stateObj.state}`) ||\r\n                localize(`component.${domain}.state.${stateObj.state}`) ||\r\n                stateObj.state;\r\n    }\r\n    return display;\r\n}\r\n//# sourceMappingURL=compute-state-display.js.map","map":"{\"version\":3,\"file\":\"compute-state-display.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/compute-state-display.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/iantrich/Projects/hass/plugins/custom-card-helpers/compute-state-display.d.ts","writeByteOrderMark":false,"text":"import { HassEntity } from \"home-assistant-js-websocket\";\r\nimport { LocalizeFunc } from \"./translations/localize\";\r\nexport declare function computeStateDisplay(localize: LocalizeFunc, stateObj: HassEntity, language: string): string;\r\n"}}
