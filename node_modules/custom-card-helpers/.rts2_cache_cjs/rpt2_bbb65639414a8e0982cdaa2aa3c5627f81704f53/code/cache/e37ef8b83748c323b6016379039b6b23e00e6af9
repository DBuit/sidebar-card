{"code":"import { UNIT_C, UNIT_F } from \"./const\";\r\nimport { domainIcon } from \"./domain_icons\";\r\nconst fixedDeviceClassIcons = {\r\n    humidity: \"hass:water-percent\",\r\n    illuminance: \"hass:brightness-5\",\r\n    temperature: \"hass:thermometer\",\r\n    pressure: \"hass:gauge\",\r\n    power: \"hass:flash\",\r\n    signal_strength: \"hass:wifi\",\r\n};\r\nexport const sensorIcon = (state) => {\r\n    const dclass = state.attributes.device_class;\r\n    if (dclass && dclass in fixedDeviceClassIcons) {\r\n        return fixedDeviceClassIcons[dclass];\r\n    }\r\n    if (dclass === \"battery\") {\r\n        const battery = Number(state.state);\r\n        if (isNaN(battery)) {\r\n            return \"hass:battery-unknown\";\r\n        }\r\n        const batteryRound = Math.round(battery / 10) * 10;\r\n        if (batteryRound >= 100) {\r\n            return \"hass:battery\";\r\n        }\r\n        if (batteryRound <= 0) {\r\n            return \"hass:battery-alert\";\r\n        }\r\n        // Will return one of the following icons: (listed so extractor picks up)\r\n        // hass:battery-10\r\n        // hass:battery-20\r\n        // hass:battery-30\r\n        // hass:battery-40\r\n        // hass:battery-50\r\n        // hass:battery-60\r\n        // hass:battery-70\r\n        // hass:battery-80\r\n        // hass:battery-90\r\n        // We obscure 'hass' in iconname so this name does not get picked up\r\n        return `${\"hass\"}:battery-${batteryRound}`;\r\n    }\r\n    const unit = state.attributes.unit_of_measurement;\r\n    if (unit === UNIT_C || unit === UNIT_F) {\r\n        return \"hass:thermometer\";\r\n    }\r\n    return domainIcon(\"sensor\");\r\n};\r\n//# sourceMappingURL=sensor_icon.js.map","map":"{\"version\":3,\"file\":\"sensor_icon.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/sensor_icon.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACzC,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAE5C,MAAM,qBAAqB,GAAG;IAC5B,QAAQ,EAAE,oBAAoB;IAC9B,WAAW,EAAE,mBAAmB;IAChC,WAAW,EAAE,kBAAkB;IAC/B,QAAQ,EAAE,YAAY;IACtB,KAAK,EAAE,YAAY;IACnB,eAAe,EAAE,WAAW;CAC7B,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,KAAiB,EAAE,EAAE;IAC9C,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC;IAE7C,IAAI,MAAM,IAAI,MAAM,IAAI,qBAAqB,EAAE;QAC7C,OAAO,qBAAqB,CAAC,MAAM,CAAC,CAAC;KACtC;IACD,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;YAClB,OAAO,sBAAsB,CAAC;SAC/B;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QACnD,IAAI,YAAY,IAAI,GAAG,EAAE;YACvB,OAAO,cAAc,CAAC;SACvB;QACD,IAAI,YAAY,IAAI,CAAC,EAAE;YACrB,OAAO,oBAAoB,CAAC;SAC7B;QACD,yEAAyE;QACzE,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,oEAAoE;QACpE,OAAO,GAAG,MAAM,YAAY,YAAY,EAAE,CAAC;KAC5C;IAED,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC;IAClD,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;QACtC,OAAO,kBAAkB,CAAC;KAC3B;IACD,OAAO,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC9B,CAAC,CAAC\"}","dts":{"name":"/home/iantrich/Projects/hass/plugins/custom-card-helpers/sensor_icon.d.ts","writeByteOrderMark":false,"text":"/** Return an icon representing a sensor state. */\r\nimport { HassEntity } from \"home-assistant-js-websocket\";\r\nexport declare const sensorIcon: (state: HassEntity) => any;\r\n"}}
