{"code":"/**\r\n * Calculate a string representing a date object as relative time from now.\r\n *\r\n * Example output: 5 minutes ago, in 3 days.\r\n */\r\nconst tests = [60, 60, 24, 7];\r\nconst langKey = [\"second\", \"minute\", \"hour\", \"day\"];\r\nexport function relativeTime(dateObj, localize, options = {}) {\r\n    const compareTime = options.compareTime || new Date();\r\n    let delta = (compareTime.getTime() - dateObj.getTime()) / 1000;\r\n    const tense = delta >= 0 ? \"past\" : \"future\";\r\n    delta = Math.abs(delta);\r\n    let timeDesc;\r\n    for (let i = 0; i < tests.length; i++) {\r\n        if (delta < tests[i]) {\r\n            delta = Math.floor(delta);\r\n            timeDesc = localize(`ui.components.relative_time.duration.${langKey[i]}`, \"count\", delta);\r\n            break;\r\n        }\r\n        delta /= tests[i];\r\n    }\r\n    if (timeDesc === undefined) {\r\n        delta = Math.floor(delta);\r\n        timeDesc = localize(\"ui.components.relative_time.duration.week\", \"count\", delta);\r\n    }\r\n    return options.includeTense === false\r\n        ? timeDesc\r\n        : localize(`ui.components.relative_time.${tense}`, \"time\", timeDesc);\r\n}\r\n//# sourceMappingURL=relative_time.js.map","map":"{\"version\":3,\"file\":\"relative_time.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/datetime/relative_time.ts\"],\"names\":[],\"mappings\":\"AAEA;;;;GAIG;AACH,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC9B,MAAM,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAEpD,MAAM,UAAU,YAAY,CAC1B,OAAa,EACb,QAAsB,EACtB,UAGI,EAAE;IAEN,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,IAAI,IAAI,EAAE,CAAC;IACtD,IAAI,KAAK,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;IAC/D,MAAM,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC7C,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAExB,IAAI,QAAQ,CAAC;IAEb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;YACpB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,QAAQ,GAAG,QAAQ,CACjB,wCAAwC,OAAO,CAAC,CAAC,CAAC,EAAE,EACpD,OAAO,EACP,KAAK,CACN,CAAC;YACF,MAAM;SACP;QAED,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KACnB;IAED,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC1B,QAAQ,GAAG,QAAQ,CACjB,2CAA2C,EAC3C,OAAO,EACP,KAAK,CACN,CAAC;KACH;IAED,OAAO,OAAO,CAAC,YAAY,KAAK,KAAK;QACnC,CAAC,CAAC,QAAQ;QACV,CAAC,CAAC,QAAQ,CAAC,+BAA+B,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AACzE,CAAC\"}","dts":{"name":"/home/iantrich/Projects/hass/plugins/custom-card-helpers/datetime/relative_time.d.ts","writeByteOrderMark":false,"text":"import { LocalizeFunc } from \"../translations/localize\";\r\nexport declare function relativeTime(dateObj: Date, localize: LocalizeFunc, options?: {\r\n    compareTime?: Date;\r\n    includeTense?: boolean;\r\n}): string;\r\n"}}
